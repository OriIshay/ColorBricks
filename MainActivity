package com.example.extra_notification;

import android.app.Activity;
import android.support.v4.app.NotificationCompat;
import android.support.v4.app.TaskStackBuilder;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class MainActivity extends Activity implements OnClickListener{

	private static final int TEST_NOTIF_ID = 1;
	private static final int TEST_COUNT_NOTIF = 2;
	
	private static final int PENDING_SECOND_ACTIVITY_ID = 100;

	private NotificationCompat.Builder mBuilder2;
	private int count = 1;
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		Button btnBasicNotif = (Button) findViewById(R.id.btn_basic_notif);
		Button btnBigNotif = (Button) findViewById(R.id.btn_big_notif);
		Button btnCountNotif = (Button) findViewById(R.id.btn_send_count_notif);
		Button btnAddCountNotif = (Button) findViewById(R.id.btn_add_count);
		
		btnBasicNotif.setOnClickListener(this);
		btnBigNotif.setOnClickListener(this);
		btnCountNotif.setOnClickListener(this);
		btnAddCountNotif.setOnClickListener(this);
		
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_basic_notif:
			sendBasicNotification();
			break;
		case R.id.btn_big_notif:
			sendbigViewNotification();
			break;
		case R.id.btn_send_count_notif:
			sendCountNotification();
			break;
		case R.id.btn_add_count:
			addCount();
			break;
		default:
			break;
		}
		
	}

	private void sendBasicNotification() {
		Intent intent = new Intent(this, SecondActivity.class);
		//PendingIntent pendingIntent = PendingIntent.getActivity(this, PENDING_SECOND_ACTIVITY_ID, intent, PendingIntent.FLAG_UPDATE_CURRENT);
		
		NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)
			.setSmallIcon(R.drawable.ic_launcher)
			.setContentTitle("Test Notification")
			.setContentText("text test!!!!")
			.setAutoCancel(true);
		
		TaskStackBuilder mStackBuilder = TaskStackBuilder.create(this);
		mStackBuilder.addParentStack(SecondActivity.class);
		mStackBuilder.addNextIntent(intent);
		
		PendingIntent pendingIntent = mStackBuilder.getPendingIntent(PENDING_SECOND_ACTIVITY_ID, PendingIntent.FLAG_UPDATE_CURRENT);
		mBuilder.setContentIntent(pendingIntent);
		
		NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		mNotificationManager.notify(TEST_NOTIF_ID, mBuilder.build());
	}

	private void sendbigViewNotification(){
		NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this)
		.setSmallIcon(R.drawable.ic_launcher)
		.setContentTitle("Test Big")
		.setContentText("text big!!!!");
		
		NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();
		inboxStyle.setBigContentTitle("You have many messages");
		
		inboxStyle.addLine("msg1");
		inboxStyle.addLine("msg2");
		
		mBuilder.setStyle(inboxStyle);
		
		NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		mNotificationManager.notify(TEST_NOTIF_ID, mBuilder.build());
	}
	
	private void sendCountNotification(){
		mBuilder2 = new NotificationCompat.Builder(this)
		.setSmallIcon(R.drawable.ic_launcher)
		.setContentTitle("Messages");
		
		mBuilder2.setContentText("You have a message").setNumber(1);

		NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		mNotificationManager.notify(TEST_COUNT_NOTIF, mBuilder2.build());
	}
	
	private void addCount(){
		
		if(mBuilder2 != null){
			
			mBuilder2.setContentText("You have new messages").setNumber(++count);
			
			NotificationManager mNotificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
			mNotificationManager.notify(TEST_COUNT_NOTIF, mBuilder2.build());
			
		}
	}
}
